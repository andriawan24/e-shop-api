basePath: /api/v1
definitions:
  carts.CartDetailFormatter:
    properties:
      cart_id:
        type: integer
      id:
        type: integer
      product:
        $ref: '#/definitions/products.ProductFormatter'
      quantity:
        type: integer
    type: object
  carts.CartFormatter:
    properties:
      cart_details:
        items:
          $ref: '#/definitions/carts.CartDetailFormatter'
        type: array
      id:
        type: integer
      user:
        $ref: '#/definitions/users.UserFormatter'
      user_id:
        type: integer
    type: object
  carts.RemoveProductInput:
    properties:
      product_id:
        type: integer
    required:
    - product_id
    type: object
  carts.SaveCartInput:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  merchants.Merchant:
    properties:
      address:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      phoneNumber:
        type: string
      tagline:
        type: string
      updatedAt:
        type: string
    type: object
  merchants.MerchantFormatter:
    properties:
      address:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      tagline:
        type: string
      updated_at:
        type: string
    type: object
  products.Category:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  products.CategoryFormatter:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  products.Product:
    properties:
      category:
        $ref: '#/definitions/products.Category'
      categoryID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      discountedPrice:
        type: integer
      id:
        type: integer
      merchants:
        $ref: '#/definitions/merchants.Merchant'
      merchantsID:
        type: integer
      name:
        type: string
      price:
        type: integer
      productImages:
        items:
          $ref: '#/definitions/products.ProductImage'
        type: array
      stocks:
        type: integer
      updatedAt:
        type: string
    type: object
  products.ProductFormatter:
    properties:
      category:
        $ref: '#/definitions/products.CategoryFormatter'
      description:
        type: string
      discounted_price:
        type: integer
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/products.ProductImageFormatter'
        type: array
      merchant:
        $ref: '#/definitions/merchants.MerchantFormatter'
      name:
        type: string
      price:
        type: integer
      stocks:
        type: integer
    type: object
  products.ProductImage:
    properties:
      id:
        type: integer
      imageURL:
        type: string
      productID:
        type: integer
    type: object
  products.ProductImageFormatter:
    properties:
      id:
        type: integer
      image_url:
        type: string
      products_id:
        type: integer
    type: object
  users.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  users.RegisterInput:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - address
    - email
    - name
    - password
    - phone_number
    type: object
  users.UpdateUserInput:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  users.User:
    properties:
      address:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      updatedAt:
        type: string
    type: object
  users.UserFormatter:
    properties:
      access_token:
        type: string
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fawaznaufal23@gmail.com
    name: Naufal Fawwaz Andriawan
  description: API ini dibuat untuk memenuhi salah satu syarat dalam proses perekrutan
    internship di synapsis.id
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: E-Shop API
  version: "1.0"
paths:
  /carts:
    delete:
      consumes:
      - application/json
      operationId: remove-cart
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Remove the whole cart
      tags:
      - Cart
    get:
      operationId: get-user-cart
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/carts.CartFormatter'
            type: array
      summary: Get User Cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      operationId: save-or-update-cart
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Save Cart Input
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/carts.SaveCartInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/carts.CartFormatter'
      summary: Save or update cart
      tags:
      - Cart
  /carts/product:
    delete:
      consumes:
      - application/json
      operationId: remove-product-cart
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Remove Product Cart Input
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/carts.RemoveProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Remove one product from user's cart
      tags:
      - Cart
  /categories:
    get:
      operationId: get-all-categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.Category'
            type: array
      summary: get all categories
      tags:
      - Products
  /me:
    get:
      consumes:
      - application/json
      operationId: fetch-user
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Get detail of an account
      tags:
      - Account
  /products:
    get:
      operationId: get-all-products
      parameters:
      - description: Category ID
        in: query
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.Product'
            type: array
      summary: get all products
      tags:
      - Products
  /sign-in:
    post:
      consumes:
      - application/json
      operationId: login-user
      parameters:
      - description: Login input
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/users.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Sign in to an account
      tags:
      - Account
  /sign-up:
    post:
      consumes:
      - application/json
      operationId: register-user
      parameters:
      - description: Register user input
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/users.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Create an account
      tags:
      - Account
  /update-profile:
    put:
      operationId: update-user
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update User input
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/users.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Updating user data
      tags:
      - Account
swagger: "2.0"
